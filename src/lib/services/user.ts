import { query } from '../db';nimport bcrypt from 'bcryptjs';nnexport interface User {n  id: number;n  email: string;n  password: string;n  created_at: Date;n}nnexport async function createUser(email: string, password: string): Promise<User> {n  const hashedPassword = await bcrypt.hash(password, 10);n  n  const result = await query(n    'INSERT INTO users (email, password) VALUES (?, ?)',n    [email, hashedPassword]n  ) as any;n  n  return {n    id: result.insertId,n    email,n    password: hashedPassword,n    created_at: new Date(),n  };n}nnexport async function getUserByEmail(email: string): Promise<User | null> {n  const users = await query(n    'SELECT * FROM users WHERE email = ?',n    [email]n  ) as User[];n  n  return users.length > 0 ? users[0] : null;n}nnexport async function getUserById(id: number): Promise<User | null> {n  const users = await query(n    'SELECT * FROM users WHERE id = ?',n    [id]n  ) as User[];n  n  return users.length > 0 ? users[0] : null;n}